// Generated by https://quicktype.io

export interface RootLayout {
  ImageFromTiff:                 boolean;
  RemoveReadOnlyFieldException:  string;
  RemoveReadOnlyOnProcess:       string;
  OverrideOnProcess:             string;
  SetOverrideStatus:             string;
  BackgroundColor:               { [key: string]: number | null };
  ReadOnlyBackgroundColor:       { [key: string]: number | null };
  UnFocusBackgroundColor:        { [key: string]: number | null };
  FocusBackgroundColor:          { [key: string]: number | null };
  AllowFlag:                     boolean;
  AllowInterrupt:                boolean;
  AutomaticClose:                boolean;
  AutoSaveInterval:              number;
  BeforeSave:                    string;
  Behavior:                      Behavior[];
  DisableEmbedKeyboard:          boolean;
  DisableFindOnStatus:           boolean;
  DocumentClosedByFlag:          boolean;
  DocumentFlagMessage:           null;
  FlagOptions:                   string;
  FlagOptionsByDocument:         string;
  ImageFromDirectory:            boolean;
  RecycleForm:                   boolean;
  InternalFlagOptions:           InternalFlagOption[];
  InternalFlagOptionsByDocument: InternalFlagOption[];
  JobDataInfo:                   JobDataInfo;
  Name:                          string;
  PageLayout:                    PageLayout[];
  DeletedPageLayout:             any[];
  Type:                          string;
  GetAllImageList:               boolean;
}

export interface Behavior {
  IncludeBlankFindOnStatus:         boolean;
  BlindFindOnStatus:                boolean;
  DisplayInputFlagMessage:          boolean;
  Enable:                           boolean;
  FindOnStatus:                     string;
  KeyDataMode:                      string;
  KeyType:                          KeyType;
  LoadFromInputData:                boolean;
  Name:                             string;
  DefaultStatusWhenInputLoaded:     string;
  DefaultStatusWhenInterruptLoaded: string;
  Override:                         null;
}

export interface KeyType {
  IfNotMatch: string;
  Mode:       string;
}

export interface InternalFlagOption {
  Description: string;
  Trigger:     string;
  Value:       string;
}

export interface JobDataInfo {
  BatchName:            null;
  Customer:             string;
  DateTimeIn:           null;
  DateTimeOut:          null;
  DCN:                  string;
  DocumentClosedByFlag: boolean;
  DocumentFlagMessage:  string;
  DocumentsCount:       number;
  ElapsedTime:          number;
  IpAddress:            string;
  Job:                  string;
  KeyGross:             number;
  KeyNet:               number;
  LinesCount:           number;
  MachineName:          string;
  MachineUser:          string;
  OPID:                 string;
  PauseTime:            number;
  Process:              string;
  ReferenceID:          number;
  RoutePath:            string;
  SessionId:            null;
  Status:               string;
  Version:              string;
}

export interface PageLayout {
  DeletedByOPID:      null;
  DeletedOnSessionID: null;
  AnnonItemLayout:    any[];
  Behavior:           any[];
  ControlsPercent:    number;
  GroupLayout:        GroupLayout[];
  DeletedGroupLayout: any[];
  ImageIndex:         number;
  ImagePercent:       number;
  ImageZoom:          number;
  Index:              number;
  IsNewElement:       boolean;
  Name:               string;
  Orientation:        number;
  Position:           number;
  Repeat:             number;
  Type:               string;
}

export interface GroupLayout {
  RepeatStaticRender: boolean;
  DeletedByOPID:      null;
  DeletedOnSessionID: null;
  BackgroundColor:    { [key: string]: number | null };
  AnnonItemLayout:    AnnonItemLayout[];
  Behavior:           any[];
  GroupAligment:      number;
  ImageIndex:         number;
  ImageZoom:          number;
  Index:              number;
  IsNewElement:       boolean;
  IsNewEntry:         boolean;
  ItemLayout:         ItemLayout[];
  Name:               string;
  Repeat:             number;
  Type:               string;
  Zone:               string;
}

export interface AnnonItemLayout {
  AutoSize:         boolean;
  BackgroundColor:  { [key: string]: number | null };
  BorderBrushColor: { [key: string]: number | null };
  BorderThickness:  BorderThickness;
  Dimension:        Ion;
  Font:             Font;
  FontSize:         number;
  ForegroundColor:  { [key: string]: number | null };
  Model:            string;
  Name:             string;
  Position:         Ion;
  Text:             string;
  TextAlignment:    number;
  ZIndex:           number;
}

export interface BorderThickness {
  Left:   number;
  Top:    number;
  Right:  number;
  Bottom: number;
}

export interface Ion {
  X: number;
  Y: number;
}

export enum Font {
  Arial = "Arial",
  CourierNew = "Courier New",
}

export interface ItemLayout {
  HasNewValue:                      boolean;
  DefaultStatusWhenInputLoaded:     string;
  DefaultStatusWhenInterruptLoaded: string;
  AllowFlag:                        boolean;
  AutoSkip:                         boolean;
  Behavior:                         any[];
  ControlState:                     number;
  CurrentBehavior:                  null;
  CurrentPosition:                  null;
  LocationInfo:                     null;
  CurrentStatus:                    null;
  CurrentZone:                      null;
  CurrentZoom:                      null;
  DataType:                         null;
  Dimension:                        Ion;
  DisplayFormat:                    null;
  FlagMessage:                      null;
  HasFlag:                          boolean;
  IconPath:                         string;
  ImageIndex:                       number;
  ImageZoom:                        number;
  InputCharSet:                     string;
  InputData:                        InputData;
  KeyGross:                         number;
  KeyNet:                           number;
  Link:                             string;
  LockFieldOnStatus:                string;
  LookupFields:                     string;
  LookupFielsClearNoMatch:          boolean;
  LookupQuery:                      string;
  MessageInfo:                      string;
  MessageRule:                      string;
  Model:                            number;
  Name:                             string;
  OPID:                             null;
  OutputCharSet:                    string;
  PageIndex:                        number;
  Position:                         Ion;
  ReadOnly:                         boolean;
  ResetPositionWhenChangePage:      boolean;
  SessionID:                        null;
  SkipFieldOnStatus:                string;
  Status:                           null;
  SubItemLayout:                    any[];
  TabStop:                          boolean;
  Type:                             string;
  ValidadationType:                 number;
  ValidationMessage:                null | string;
  ValidChars:                       null | string;
  ValidExpression:                  null | string;
  Value:                            null;
  Visibility:                       boolean;
  XCurrentPosition:                 null;
  ZIndex:                           number;
  Zone:                             string;
  ZoneHighlight:                    string;
  Zoom:                             null;
}

export interface InputData {
  CurrentPosition: null;
  Name:            null;
  PageIndex:       number;
  Status:          null;
  Type:            null;
  Values:          any[];
  ZoneHighlight:   null;
  Zoom:            null;
  LocationInfo:    null;
}
